$$ This is a Pump source file.  Please use Pump to convert it to
$$ generated_bindings.h
$$
$var n = 10  $$ The maximum arity we support.
#ifndef SAUCE_SAUCE_INTERNAL_GENERATED_BINDINGS_H_
#define SAUCE_SAUCE_INTERNAL_GENERATED_BINDINGS_H_

namespace sauce { namespace internal { namespace bindings {

  template<typename Injector>
  class Binding;

  template<typename Injector, class Iface, typename Constructor>
  class New;

$range i 0..n
$for i [[
$range j 1..i
$var comma_typename_As = [[$for j [[, typename A$j]]]]
$var typename_As = [[$for j, [[typename A$j]]]]
$var As = [[$for j, [[A$j]]]]

  template<typename Injector, class Iface, class Impl$comma_typename_As>
  class New<Injector, Iface, Impl($As)>: public Binding<Injector> {
  public:
    static Impl * provide(Injector & injector) {
      return new_delete(injector).template _new<Impl>([[$for j, [[

        injector.template provide<A$j>()
]]]]

      );
    };

    static void dispose(Injector & injector, Iface * iface) {
      new_delete(injector)._delete(iface);
[[$for j [[
      // injector.template dispose<A$j>(DERP); How do we find DERP again?

]]]]
    };
  };

]]

} } } // namespace bindings, namespace internal, namespace sauce

#endif